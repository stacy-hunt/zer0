{"version":3,"sources":["components/FutureButton/FutureButtonStyle.module.css","components/FutureButton/index.js","App.js","index.js"],"names":["module","exports","FutureButton","props","useState","hasHovered","setHovered","isSelected","setSelected","className","styles","futureButton","selected","onMouseEnter","onMouseUp","style","iconImage","content","children","wash","hovered","App","display","marginLeft","ReactDOM","render","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,aAAe,wCAAwC,QAAU,mCAAmC,UAAY,qCAAqC,KAAO,gCAAgC,SAAW,oCAAoC,OAAS,kCAAkC,QAAU,mCAAmC,OAAS,oC,0LCiC/UC,MA9BOC,IAAW,MAAD,EAEOC,oBAAS,GAFhB,mBAEpBC,EAFoB,KAERC,EAFQ,OAGQF,oBAAS,GAHjB,mBAGpBG,EAHoB,KAGRC,EAHQ,KAa5B,OACI,4BACIC,UAAS,UAAKC,IAAOC,aAAZ,YAA4BJ,EAAaG,IAAOE,SAAW,IACpEC,aAXY,KAChBP,GAAW,IAWPQ,UARY,KACHN,GAAbD,IAQIQ,MAAOZ,EAAMY,OAEb,yBAAKN,UAAWC,IAAOM,YACvB,yBAAKP,UAAWC,IAAOO,SACjBd,EAAMe,UAEZ,yBAAKT,UAAS,UAAKC,IAAOS,KAAZ,YAAoBd,IAAeE,EAAaG,IAAOU,QAAU,MAC/E,yBAAKX,UAAWC,IAAOM,cCDpBK,MAfFlB,GAGL,6BACI,sDACA,6CACA,wMACA,yBAAKY,MAAO,CAACO,QAAS,SAClB,kBAAC,EAAD,iBACA,kBAAC,EAAD,CAAcP,MAAO,CAACQ,WAAY,KAAlC,cClBhBC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.69b1fab4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"futureButton\":\"FutureButtonStyle_futureButton__2y2-4\",\"content\":\"FutureButtonStyle_content__3J_Hx\",\"iconImage\":\"FutureButtonStyle_iconImage__b6DMQ\",\"wash\":\"FutureButtonStyle_wash__3uKfo\",\"selected\":\"FutureButtonStyle_selected__3p1pS\",\"expand\":\"FutureButtonStyle_expand__1pdKF\",\"hovered\":\"FutureButtonStyle_hovered__15CX5\",\"shrink\":\"FutureButtonStyle_shrink__1_A7Y\"};","import React, { useState } from 'react'\n\nimport styles from './FutureButtonStyle.module.css'\n\nconst FutureButton = (props) => {\n\n    const [ hasHovered, setHovered ] = useState(false)\n    const [ isSelected, setSelected ] = useState(false)\n\n    const handleHover = () => {\n        setHovered(true)\n    }\n\n    const handleClick = () => {\n        isSelected ? setSelected(false) : setSelected(true)\n    }\n\n    return (\n        <button \n            className={`${styles.futureButton} ${isSelected ? styles.selected : ''}`}\n            onMouseEnter={handleHover}\n            onMouseUp={handleClick}\n            style={props.style}\n        >\n            <div className={styles.iconImage}></div>\n            <div className={styles.content}>\n                { props.children }\n            </div>\n            <div className={`${styles.wash} ${hasHovered && !isSelected ? styles.hovered : ''}`}></div>\n            <div className={styles.iconImage}></div>\n        </button>\n    )\n}\n\nexport default FutureButton","//- Global stylesheets\nimport './styles/reset.css' // Import first so components styles cascade\nimport './styles/main.css' // Generic styling\n\n//- React imports\nimport React, { useEffect, useState } from 'react'\n\n//- Styling\n\n//- Components\nimport FutureButton from './components/FutureButton'\n\n\nconst App = (props) => {\n\n    return(\n        <div>\n            <h1>zer0 Component Library</h1>\n            <h2>Future Button</h2>\n            <p>This one isn't quite done yet - still need access to the Figma doc for the right design assets and the correct colours/blur values, and the animation needs some tweaking</p>\n            <div style={{display: 'flex'}}>\n                <FutureButton>Option 1</FutureButton>\n                <FutureButton style={{marginLeft: 32}}>Option 2</FutureButton>\n            </div>\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}